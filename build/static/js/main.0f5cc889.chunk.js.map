{"version":3,"sources":["assets/news/news.svg","components/TaskContext.js","components/DarkModeSwitch.js","components/Popup.js","components/Form.js","components/Nav.js","components/TaskItem.js","components/TaskList.js","components/Weather.js","components/News.js","components/Photo.js","App.js","index.js"],"names":["module","exports","TaskContext","createContext","TaskProvider","props","useState","dataTask","setDataTask","Provider","value","children","DarkModeSwitch","dark","setDark","useEffect","darkMode","JSON","parse","localStorage","getItem","setItem","setTheme","theme","document","documentElement","setAttribute","classList","add","window","setTimeout","remove","className","type","id","name","onChange","checked","htmlFor","Popup","tekst","popup","createElement","innerHTML","body","appendChild","parentNode","removeChild","Form","task","setTask","useContext","addTask","getDate","Date","copy","push","status","date","toDateString","now","stringify","action","onSubmit","e","preventDefault","placeholder","autoComplete","target","taskValue","Nav","TaskItem","index","changeStatus","deleteTask","data","onClick","icon","faTrashAlt","TaskList","tasks","dataValue","map","key","copyTask","splice","reverse","Weather","weather","setWeather","image","setImage","loading","setLoading","getWeather","a","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","fetchWeather","positionError","userLocation","fetch","apiWeather","json","console","error","faSpinner","src","alt","description","title","Math","floor","main","temp","News","news","setNews","fetchNews","newsURL","fetchData","log","errors","newsImg","articles","article","href","url","publishedAt","Photo","fetchPhoto","randId","random","photoURL","photoFetch","hits","style","backgroundImage","largeImageURL","user","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0f5cc889.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/news.97eef07f.svg\";","import React, { useState, createContext } from 'react';\n\nexport const TaskContext = createContext();\n\nexport const TaskProvider = (props) => {\n    const [dataTask, setDataTask] = useState([]);\n\n    return (\n        <TaskContext.Provider value={[dataTask, setDataTask]} >\n            {props.children}\n        </TaskContext.Provider >\n    );\n}\n","import React from 'react';\n\nimport '../styles/darkModeSwitch.css';\nimport { useState, useEffect } from 'react';\n\nfunction DarkModeSwitch() {\n\n    const [dark, setDark] = useState('');\n\n    useEffect(() => {\n        const darkMode = JSON.parse(localStorage.getItem('dark'));\n        if (darkMode === null) {\n            localStorage.setItem('dark', false);\n        } else {\n            setDark(darkMode);\n        }\n        setTheme(darkMode);\n    }, [])\n\n\n    const setTheme = (theme) => {\n        if (theme === true) {\n\n            document.documentElement.setAttribute('data-theme', 'dark');\n            document.documentElement.classList.add('theme-transition')\n            document.documentElement.setAttribute('data-theme', 'dark')\n            window.setTimeout(function () {\n                document.documentElement.classList.remove('theme-transition');\n            }, 800);\n\n        } else {\n\n            document.documentElement.setAttribute('data-theme', 'light');\n            document.documentElement.classList.add('theme-transition')\n            document.documentElement.setAttribute('data-theme', 'light')\n            window.setTimeout(function () {\n                document.documentElement.classList.remove('theme-transition');\n            }, 800);\n\n        }\n\n    }\n\n    const changeTheme = () => {\n        localStorage.setItem('dark', !dark);\n        setTheme(!dark);\n        setDark(!dark);\n    }\n\n    return (\n        <div className=\"toggle-container\">\n            <input\n                type=\"checkbox\"\n                id=\"switch\"\n                name=\"theme\"\n                onChange={changeTheme}\n                checked={dark}\n            />\n            <label htmlFor=\"switch\">Toggle</label>\n        </div>\n    )\n\n}\n\nexport default DarkModeSwitch;\n","import '../styles/popup.css';\n\nfunction Popup(tekst) {\n    const popup = document.createElement('div');\n    popup.innerHTML = tekst;\n    popup.classList.add('popup');\n    document.body.appendChild(popup);\n\n    setTimeout(() => {\n        popup.parentNode.removeChild(popup);\n    }, 1500);\n}\n\nexport default Popup;\n","import React, { useState, useContext } from 'react';\nimport { TaskContext } from './TaskContext';\n\nimport Popup from './Popup';\n\nfunction Form() {\n\n    const [task, setTask] = useState('');\n    const [dataTask, setDataTask] = useContext(TaskContext)\n\n    const taskValue = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        setTask('');\n        addTask(task);\n    }\n\n    const addTask = (task) => {\n        const getDate = new Date();\n        if (task === '') {\n            Popup('Fill Data 🖐');\n        } else {\n            const copy = [...dataTask];\n            copy.push({\n                task: task,\n                status: \"primary\",\n                date: getDate.toDateString(),\n                id: Date.now()\n            });\n            Popup('Added 👆');\n            localStorage.setItem('data', JSON.stringify(copy));\n            setDataTask(copy);\n        };\n    }\n\n\n    return (\n        <div className=\"form\">\n            <form action=\"\" onSubmit={handleClick}>\n                <input type=\"text\"\n                    name=\"task\"\n                    placeholder=\"Write Your Task\"\n                    value={task}\n                    autoComplete=\"off\"\n                    onChange={(e) => taskValue(e)}\n                />\n                <button type=\"submit\">Create it!</button>\n            </form>\n        </div>\n\n    );\n}\n\nexport default Form;\n","import React from 'react';\n\nimport DarkModeSwitch from './DarkModeSwitch';\nimport Form from './Form';\nimport '../styles/nav.css';\n\nfunction Nav() {\n    return (\n        <nav>\n            <div className=\"logo\">\n                <h1>Your Tasks</h1>\n            </div>\n            <Form />\n            <DarkModeSwitch />\n        </nav>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\n\nfunction TaskItem({ task, status, index, changeStatus, deleteTask, data }) {\n\n    return (\n        <div\n            className={\"task \" + status}\n            id={\"task-\" + index}\n            onClick={changeStatus}\n        >\n            <p>{data}</p>\n            <h1>{task}</h1>\n            <div className=\"icons\" onClick={deleteTask}>\n                <FontAwesomeIcon icon={faTrashAlt} />\n            </div>\n        </div>\n    );\n}\n\nexport default TaskItem;\n","import React, { useEffect, useContext } from 'react';\nimport { TaskContext } from './TaskContext';\nimport Popup from './Popup';\n\nimport '../styles/taskList.css';\nimport '../styles/popup.css';\nimport TaskItem from './TaskItem';\n\nfunction TaskList() {\n    const [dataTask, setDataTask] = useContext(TaskContext);\n\n    useEffect(() => {\n        tasks();\n    }, []);\n\n    const tasks = () => {\n        let dataValue = JSON.parse(localStorage.getItem('data'));\n        if (dataValue === null) {\n            dataValue = [{\n                task: \"Have Fun with my TaskManager ✨\",\n                status: \"success\"\n            }];\n            localStorage.setItem('data', JSON.stringify(dataValue));\n        }\n        setDataTask(dataValue);\n    }\n\n    const changeStatus = (index) => {\n        const copyTask = [...dataTask];\n        if (copyTask[index].status === 'success') {\n            copyTask[index].status = 'primary';\n            Popup('To do ✨');\n        } else {\n            copyTask[index].status = 'success';\n            Popup('It\\'s done 🔥');\n        }\n        setDataTask(copyTask);\n        localStorage.setItem('data', JSON.stringify(copyTask));\n    }\n\n    const deleteTask = (index) => {\n        const copyTask = [...dataTask];\n        setTimeout(() => {\n            copyTask.splice(index, 1);\n            setDataTask(copyTask);\n            localStorage.setItem('data', JSON.stringify(copyTask));\n        }, 300);\n    }\n\n    return (\n\n        dataTask.map((task, index) => (\n            <TaskItem\n                key={task.id}\n                task={task.task}\n                status={task.status}\n                index={index}\n                changeStatus={() => changeStatus(index)}\n                deleteTask={() => deleteTask(index)}\n                data={task.date}\n            />\n        )).reverse()\n\n    )\n\n}\n\nexport default TaskList;\n","import React, { useEffect, useState } from 'react';\n\nimport '../styles/weather.css';\n\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nfunction Weather() {\n\n    const [weather, setWeather] = useState([]);\n    const [image, setImage] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getWeather();\n    }, []);\n\n    const getWeather = async () => {\n        if (navigator.geolocation) {\n            await navigator.geolocation.getCurrentPosition(\n                function (position) {\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    fetchWeather(lat, lon);\n                }, function (positionError) {\n                    fetchWeather(52.23, 21.01)\n                }\n            )\n        }\n    }\n\n    const fetchWeather = async (lat, lon) => {\n        const key = `157a086678c6a4bddb37252236346531`;\n        const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n        try {\n            const apiWeather = await fetch(userLocation);\n            const data = await apiWeather.json();\n            setWeather(data);\n            setLoading(false);\n            setImage(`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`);\n        } catch (err) {\n            console.error(err)\n        }\n    }\n    if (loading) {\n        return (\n            <div id=\"weather\">\n                <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\n            </div>\n        );\n    };\n\n\n\n    return (\n        <div id=\"weather\">\n            <h1>{weather.name}</h1>\n            <img src={image} alt={weather.weather[0].description} title={weather.weather[0].description} />\n            <h2>{Math.floor(weather.main.temp - 273.15)} °C</h2>\n        </div >\n    );\n}\n\nexport default Weather;\n","import React, { useEffect, useState } from 'react';\n\nimport '../styles/news.css';\nimport newsImg from '../assets/news/news.svg';\n\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\n\nfunction News() {\n\n    const [news, setNews] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchNews();\n    }, []);\n\n\n    const fetchNews = async () => {\n        const token = 'a05805ed58ffc71ae2f0a4ea2d84ab25';\n        const newsURL = `https://gnews.io/api/v3/top-news?lang=pl&max=3&token=${token}`;\n        try {\n            const fetchData = await fetch(newsURL);\n            const data = await fetchData.json();\n            setNews(data);\n            setLoading(false);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n\n    if (loading) {\n        return (\n            <div id=\"news\">\n                <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\n            </div>\n        );\n    };\n\n    if (\"errors\" in news) {\n        return (\n            <div id=\"news\">\n                <h1>{news.errors[0]} </h1>\n            </div>\n        );\n    }\n\n\n    return (\n        <div id=\"news\">\n            <div id=\"news-title\">\n                <h1>News</h1>\n                <img src={newsImg} alt=\"news icon\" title=\"News\" />\n            </div>\n            {\n                news.articles.map((article, index) => (\n                    <div key={index} className=\"article\">\n                        <h2><a href={article.url} target=\"blank\">{article.title}</a></h2>\n                        <p>{article.publishedAt}</p>\n                    </div>\n                ))\n            }\n        </div>\n    );\n\n\n\n}\n\nexport default News;\n","import React, { useEffect, useState } from 'react';\n\nimport '../styles/photo.css';\n\nfunction Photo() {\n\n    const [image, setImage] = useState([]);\n\n    useEffect(() => {\n        fetchPhoto();\n    }, [])\n\n    const fetchPhoto = async () => {\n        const randId = Math.floor(Math.random() * (14 - 1 + 1)) + 1;\n        const key = '16806694-8789b173812b34e350141a20b';\n        const photoURL = `https://pixabay.com/api/?key=${key}&category=nature&image_type=photo`;\n\n        const photoFetch = await fetch(photoURL);\n        const data = await photoFetch.json();\n        setImage(data.hits[randId]);\n\n    }\n\n\n    return (\n        <div id=\"photo\" style={{ backgroundImage: `url(${image.largeImageURL})` }} >\n            <div className=\"about\">\n                <p>Author: {image.user}</p>\n                <p> <a href={image.largeImageURL} target=\"blank\">pixabay.com</a></p>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Photo;\n","import React from 'react';\nimport { TaskProvider } from './components/TaskContext'\n\nimport Nav from './components/Nav';\nimport TaskList from './components/TaskList';\nimport Weather from './components/Weather';\nimport News from './components/News';\nimport Photo from './components/Photo'\n\nfunction App() {\n    return (\n        <TaskProvider>\n            <Nav />\n            <div className=\"App\">\n                <div id=\"left\">\n                    <TaskList />\n                </div>\n                <div id=\"right\">\n                    <Weather />\n                    <News />\n                    <Photo />\n                </div>\n            </div>\n        </TaskProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}