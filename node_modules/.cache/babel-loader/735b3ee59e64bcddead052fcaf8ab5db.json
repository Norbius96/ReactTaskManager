{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskList.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { TaskContext } from './TaskContext';\nimport Popup from './Popup';\nimport '../styles/taskList.css';\nimport '../styles/popup.css';\nimport TaskItem from './TaskItem';\n\nfunction TaskList() {\n  const [dataTask, setDataTask] = useContext(TaskContext);\n  useEffect(() => {\n    tasks();\n  }, []);\n\n  const tasks = () => {\n    let dataValue = JSON.parse(localStorage.getItem('data'));\n\n    if (dataValue === null) {\n      dataValue = [{\n        task: \"Have Fun with my TaskManager ✨\",\n        status: \"success\"\n      }];\n      localStorage.setItem('data', JSON.stringify(dataValue));\n    }\n\n    setDataTask(dataValue);\n  };\n\n  const changeStatus = index => {\n    const copyTask = [...dataTask];\n\n    if (copyTask[index].status === 'success') {\n      copyTask[index].status = 'primary';\n      Popup('To do ✨');\n    } else {\n      copyTask[index].status = 'success';\n      Popup('It\\'s done 🔥');\n    }\n\n    setDataTask(copyTask);\n    localStorage.setItem('data', JSON.stringify(copyTask));\n  };\n\n  const deleteTask = index => {\n    const copyTask = [...dataTask];\n    copyTask.splice(index, 1);\n    setDataTask(copyTask);\n    localStorage.setItem('data', JSON.stringify(copyTask));\n    Popup('Deleted ❌');\n  };\n\n  return dataTask.map((task, index) => /*#__PURE__*/React.createElement(TaskItem, {\n    key: index,\n    task: task.task,\n    status: task.status,\n    index: index,\n    changeStatus: () => changeStatus(index),\n    deleteTask: () => deleteTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })).reverse();\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskList.js"],"names":["React","useState","useEffect","useContext","TaskContext","Popup","TaskItem","TaskList","dataTask","setDataTask","tasks","dataValue","JSON","parse","localStorage","getItem","task","status","setItem","stringify","changeStatus","index","copyTask","deleteTask","splice","map","reverse"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,wBAAP;AACA,OAAO,qBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,UAAU,CAACC,WAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK;AACR,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,KAAK,GAAG,MAAM;AAChB,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhB;;AACA,QAAIJ,SAAS,KAAK,IAAlB,EAAwB;AACpBA,MAAAA,SAAS,GAAG,CAAC;AACTK,QAAAA,IAAI,EAAE,gCADG;AAETC,QAAAA,MAAM,EAAE;AAFC,OAAD,CAAZ;AAIAH,MAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACO,SAAL,CAAeR,SAAf,CAA7B;AACH;;AACDF,IAAAA,WAAW,CAACE,SAAD,CAAX;AACH,GAVD;;AAYA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,QAAQ,GAAG,CAAC,GAAGd,QAAJ,CAAjB;;AACA,QAAIc,QAAQ,CAACD,KAAD,CAAR,CAAgBJ,MAAhB,KAA2B,SAA/B,EAA0C;AACtCK,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBJ,MAAhB,GAAyB,SAAzB;AACAZ,MAAAA,KAAK,CAAC,SAAD,CAAL;AACH,KAHD,MAGO;AACHiB,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBJ,MAAhB,GAAyB,SAAzB;AACAZ,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH;;AACDI,IAAAA,WAAW,CAACa,QAAD,CAAX;AACAR,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACO,SAAL,CAAeG,QAAf,CAA7B;AACH,GAXD;;AAaA,QAAMC,UAAU,GAAIF,KAAD,IAAW;AAC1B,UAAMC,QAAQ,GAAG,CAAC,GAAGd,QAAJ,CAAjB;AACAc,IAAAA,QAAQ,CAACE,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB;AACAZ,IAAAA,WAAW,CAACa,QAAD,CAAX;AACAR,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACO,SAAL,CAAeG,QAAf,CAA7B;AACAjB,IAAAA,KAAK,CAAC,WAAD,CAAL;AACH,GAND;;AASA,SAEIG,QAAQ,CAACiB,GAAT,CAAa,CAACT,IAAD,EAAOK,KAAP,kBACT,oBAAC,QAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,IAAI,EAAEL,IAAI,CAACA,IAFf;AAGI,IAAA,MAAM,EAAEA,IAAI,CAACC,MAHjB;AAII,IAAA,KAAK,EAAEI,KAJX;AAKI,IAAA,YAAY,EAAE,MAAMD,YAAY,CAACC,KAAD,CALpC;AAMI,IAAA,UAAU,EAAE,MAAME,UAAU,CAACF,KAAD,CANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASGK,OATH,EAFJ;AAeH;;AAED,eAAenB,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { TaskContext } from './TaskContext';\nimport Popup from './Popup';\n\nimport '../styles/taskList.css';\nimport '../styles/popup.css';\nimport TaskItem from './TaskItem';\n\nfunction TaskList() {\n    const [dataTask, setDataTask] = useContext(TaskContext);\n\n    useEffect(() => {\n        tasks();\n    }, [])\n\n\n    const tasks = () => {\n        let dataValue = JSON.parse(localStorage.getItem('data'));\n        if (dataValue === null) {\n            dataValue = [{\n                task: \"Have Fun with my TaskManager ✨\",\n                status: \"success\"\n            }];\n            localStorage.setItem('data', JSON.stringify(dataValue));\n        }\n        setDataTask(dataValue);\n    }\n\n    const changeStatus = (index) => {\n        const copyTask = [...dataTask];\n        if (copyTask[index].status === 'success') {\n            copyTask[index].status = 'primary';\n            Popup('To do ✨');\n        } else {\n            copyTask[index].status = 'success';\n            Popup('It\\'s done 🔥');\n        }\n        setDataTask(copyTask);\n        localStorage.setItem('data', JSON.stringify(copyTask));\n    }\n\n    const deleteTask = (index) => {\n        const copyTask = [...dataTask];\n        copyTask.splice(index, 1);\n        setDataTask(copyTask);\n        localStorage.setItem('data', JSON.stringify(copyTask));\n        Popup('Deleted ❌');\n    }\n\n\n    return (\n\n        dataTask.map((task, index) => (\n            <TaskItem\n                key={index}\n                task={task.task}\n                status={task.status}\n                index={index}\n                changeStatus={() => changeStatus(index)}\n                deleteTask={() => deleteTask(index)}\n            />\n        )).reverse()\n\n    )\n\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}