{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/Weather.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../styles/weather.css';\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [image, setImage] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  const getWeather = async () => {\n    if (navigator.geolocation) {\n      await navigator.geolocation.getCurrentPosition(function (position) {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        fetchWeather(lat, lon);\n      }, function (positionError) {\n        fetchWeather(52.23, 21.01);\n      });\n    }\n  };\n\n  const fetchWeather = async (lat, lon) => {\n    const key = `157a086678c6a4bddb37252236346531`;\n    const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n\n    try {\n      const apiWeather = await fetch(userLocation);\n      const data = await apiWeather.json();\n      setWeather(data);\n      setLoading(false);\n      setImage(`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSpinner,\n      className: \"fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, weather.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: weather.weather[0].description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, Math.floor(weather.main.temp - 273.15), \" \\xB0C\"));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/Weather.js"],"names":["React","useEffect","useState","faSpinner","FontAwesomeIcon","Weather","weather","setWeather","image","setImage","loading","setLoading","getWeather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","fetchWeather","positionError","key","userLocation","apiWeather","fetch","data","json","icon","err","console","error","name","description","Math","floor","main","temp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,uBAAP;AAEA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAGA,SAASC,OAAT,GAAmB;AAEf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAY;AAC3B,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACvB,YAAMD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACF,UAAUC,QAAV,EAAoB;AAChB,cAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA5B;AACA,cAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA5B;AACAC,QAAAA,YAAY,CAACL,GAAD,EAAMG,GAAN,CAAZ;AACH,OALC,EAKC,UAAUG,aAAV,EAAyB;AACxBD,QAAAA,YAAY,CAAC,KAAD,EAAQ,KAAR,CAAZ;AACH,OAPC,CAAN;AASH;AACJ,GAZD;;AAcA,QAAMA,YAAY,GAAG,OAAOL,GAAP,EAAYG,GAAZ,KAAoB;AACrC,UAAMI,GAAG,GAAI,kCAAb;AACA,UAAMC,YAAY,GAAI,uDAAsDR,GAAI,QAAOG,GAAI,UAASI,GAAI,EAAxG;;AACA,QAAI;AACA,YAAME,UAAU,GAAG,MAAMC,KAAK,CAACF,YAAD,CAA9B;AACA,YAAMG,IAAI,GAAG,MAAMF,UAAU,CAACG,IAAX,EAAnB;AACAtB,MAAAA,UAAU,CAACqB,IAAD,CAAV;AACAjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,QAAQ,CAAE,oCAAmCmB,IAAI,CAACtB,OAAL,CAAa,CAAb,EAAgBwB,IAAK,SAA1D,CAAR;AACH,KAND,CAME,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,GAZD;;AAaA,MAAIrB,OAAJ,EAAa;AACT,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEP,SAAvB;AAAkC,MAAA,SAAS,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAAA;AAID,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,OAAO,CAAC4B,IAAb,CADJ,eAEI;AAAK,IAAA,GAAG,EAAE1B,KAAV;AAAiB,IAAA,GAAG,EAAEF,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmB6B,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACC,KAAL,CAAW/B,OAAO,CAACgC,IAAR,CAAaC,IAAb,GAAoB,MAA/B,CAAL,WAHJ,CADJ;AAOH;;AAED,eAAelC,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport '../styles/weather.css';\n\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nfunction Weather() {\n\n    const [weather, setWeather] = useState([]);\n    const [image, setImage] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getWeather();\n    }, []);\n\n    const getWeather = async () => {\n        if (navigator.geolocation) {\n            await navigator.geolocation.getCurrentPosition(\n                function (position) {\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    fetchWeather(lat, lon);\n                }, function (positionError) {\n                    fetchWeather(52.23, 21.01)\n                }\n            )\n        }\n    }\n\n    const fetchWeather = async (lat, lon) => {\n        const key = `157a086678c6a4bddb37252236346531`;\n        const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n        try {\n            const apiWeather = await fetch(userLocation);\n            const data = await apiWeather.json();\n            setWeather(data);\n            setLoading(false);\n            setImage(`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`);\n        } catch (err) {\n            console.error(err)\n        }\n    }\n    if (loading) {\n        return (\n            <div id=\"weather\">\n                <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\n            </div>\n        );\n    };\n\n\n\n    return (\n        <div id=\"weather\">\n            <h1>{weather.name}</h1>\n            <img src={image} alt={weather.weather[0].description} />\n            <h2>{Math.floor(weather.main.temp - 273.15)} Â°C</h2>\n        </div >\n    );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}