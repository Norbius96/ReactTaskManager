{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/DarkModeSwitch.js\";\nimport React from 'react';\nimport '../styles/darkModeSwitch.css';\nimport { useState, useEffect } from 'react';\n\nfunction DarkModeSwitch() {\n  const darkMode = localStorage.getItem('dark');\n  const [dark, setDark] = useState(true);\n\n  const changeTheme = () => {\n    setDark(!dark);\n    localStorage.setItem('dark', dark);\n    console.log(darkMode);\n\n    if (darkMode === true) {\n      document.documentElement.setAttribute('data-theme', 'dark');\n      document.documentElement.classList.add('theme-transition');\n      document.documentElement.setAttribute('data-theme', 'dark');\n      window.setTimeout(function () {\n        document.documentElement.classList.remove('theme-transition');\n      }, 1000);\n    } else {\n      document.documentElement.setAttribute('data-theme', 'light');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"switch\",\n    name: \"theme\",\n    onChange: changeTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Toggle\"));\n}\n\nexport default DarkModeSwitch;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/DarkModeSwitch.js"],"names":["React","useState","useEffect","DarkModeSwitch","darkMode","localStorage","getItem","dark","setDark","changeTheme","setItem","console","log","document","documentElement","setAttribute","classList","add","window","setTimeout","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,8BAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,cAAT,GAA0B;AAEtB,QAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;;AAGA,QAAMQ,WAAW,GAAG,MAAM;AACtBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAF,IAAAA,YAAY,CAACK,OAAb,CAAqB,MAArB,EAA6BH,IAA7B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;;AACA,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnBS,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACAF,MAAAA,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCC,GAAnC,CAAuC,kBAAvC;AACAJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACAG,MAAAA,MAAM,CAACC,UAAP,CAAkB,YAAY;AAC1BN,QAAAA,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCI,MAAnC,CAA0C,kBAA1C;AACH,OAFD,EAEG,IAFH;AAGH,KAPD,MAOO;AACHP,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACH;AAEJ,GAfD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,QAA1B;AAAmC,IAAA,IAAI,EAAC,OAAxC;AAAgD,IAAA,QAAQ,EAAEN,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAOH;;AAED,eAAeN,cAAf","sourcesContent":["import React from 'react';\n\nimport '../styles/darkModeSwitch.css';\nimport { useState, useEffect } from 'react';\n\nfunction DarkModeSwitch() {\n\n    const darkMode = localStorage.getItem('dark');\n\n    const [dark, setDark] = useState(true);\n\n\n    const changeTheme = () => {\n        setDark(!dark);\n        localStorage.setItem('dark', dark);\n        console.log(darkMode);\n        if (darkMode === true) {\n            document.documentElement.setAttribute('data-theme', 'dark');\n            document.documentElement.classList.add('theme-transition')\n            document.documentElement.setAttribute('data-theme', 'dark')\n            window.setTimeout(function () {\n                document.documentElement.classList.remove('theme-transition');\n            }, 1000)\n        } else {\n            document.documentElement.setAttribute('data-theme', 'light');\n        }\n\n    }\n\n\n\n    return (\n        <div className=\"toggle-container\">\n            <input type=\"checkbox\" id=\"switch\" name=\"theme\" onChange={changeTheme} />\n            <label htmlFor=\"switch\">Toggle</label>\n        </div>\n    )\n\n}\n\nexport default DarkModeSwitch;\n"]},"metadata":{},"sourceType":"module"}