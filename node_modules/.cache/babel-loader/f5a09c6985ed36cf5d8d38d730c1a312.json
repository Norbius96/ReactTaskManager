{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskList.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../styles/taskList.css';\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport data from \"../data/data.json\";\n\nfunction TaskList() {\n  const [dataTask, setDataTask] = useState([]);\n  useEffect(() => {\n    tasks();\n  }, []);\n\n  const tasks = () => {\n    let dataValue = JSON.parse(localStorage.getItem('data'));\n\n    if (dataValue === null) {\n      dataValue = [{\n        task: \"Have Fun with my TaskManager ✨\",\n        status: \"success\"\n      }];\n      localStorage.setItem('data', JSON.stringify(dataValue));\n    }\n\n    setDataTask(dataValue);\n  };\n\n  const changeStatus = index => {\n    const copyTask = [...dataTask];\n\n    if (copyTask[index].status === 'success') {\n      copyTask[index].status = 'primary';\n    } else {\n      copyTask[index].status = 'success';\n    }\n\n    setDataTask(copyTask);\n    localStorage.setItem('data', JSON.stringify(copyTask));\n  };\n\n  const deleteTask = index => {\n    const divTask = document.querySelectorAll(\".task\")[index];\n    divTask.classList.add('hidden');\n    divTask.addEventListener('transitionend', function (e) {\n      divTask.classList.add('remove');\n      const copyTask = [...dataTask];\n      copyTask.splice(index, 1);\n      setDataTask(copyTask);\n      localStorage.setItem('data', JSON.stringify(copyTask));\n      const popup = document.createElement('div');\n      popup.innerHTML = \"Deleted ✅\";\n      popup.classList.add('popup');\n      document.body.appendChild(popup);\n      setTimeout(() => {\n        popup.parentNode.removeChild(popup);\n      }, 1000);\n    }, {\n      capture: false,\n      once: true,\n      passive: false\n    });\n  };\n\n  return dataTask.map((task, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task \" + task.status,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    onClick: () => changeStatus(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, task.task), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    onClick: () => deleteTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskList.js"],"names":["React","useState","useEffect","faTrashAlt","FontAwesomeIcon","data","TaskList","dataTask","setDataTask","tasks","dataValue","JSON","parse","localStorage","getItem","task","status","setItem","stringify","changeStatus","index","copyTask","deleteTask","divTask","document","querySelectorAll","classList","add","addEventListener","e","splice","popup","createElement","innerHTML","body","appendChild","setTimeout","parentNode","removeChild","capture","once","passive","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport '../styles/taskList.css';\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport data from \"../data/data.json\"\n\nfunction TaskList() {\n    const [dataTask, setDataTask] = useState([]);\n\n    useEffect(() => {\n        tasks();\n    }, [])\n\n\n    const tasks = () => {\n        let dataValue = JSON.parse(localStorage.getItem('data'));\n        if (dataValue === null) {\n            dataValue = [{\n                task: \"Have Fun with my TaskManager ✨\",\n                status: \"success\"\n            }];\n            localStorage.setItem('data', JSON.stringify(dataValue));\n        }\n        setDataTask(dataValue);\n    }\n\n    const changeStatus = (index) => {\n        const copyTask = [...dataTask];\n        if (copyTask[index].status === 'success') {\n            copyTask[index].status = 'primary';\n        } else {\n            copyTask[index].status = 'success';\n        }\n        setDataTask(copyTask);\n        localStorage.setItem('data', JSON.stringify(copyTask));\n    }\n\n    const deleteTask = (index) => {\n        const divTask = document.querySelectorAll(\".task\")[index];\n        divTask.classList.add('hidden');\n        divTask.addEventListener('transitionend', function (e) {\n            divTask.classList.add('remove');\n\n            const copyTask = [...dataTask];\n            copyTask.splice(index, 1);\n            setDataTask(copyTask);\n\n            localStorage.setItem('data', JSON.stringify(copyTask));\n\n            const popup = document.createElement('div');\n            popup.innerHTML = \"Deleted ✅\"\n            popup.classList.add('popup');\n            document.body.appendChild(popup);\n\n            setTimeout(() => {\n                popup.parentNode.removeChild(popup);\n            }, 1000)\n        }, {\n            capture: false,\n            once: true,\n            passive: false\n        });\n\n\n    }\n\n\n    return (\n\n        dataTask.map((task, index) => (\n            <div\n                className={\"task \" + task.status}\n                key={index}>\n                <h1 onClick={() => changeStatus(index)}>{task.task}</h1>\n                <div className=\"icons\" onClick={() => deleteTask(index)}>\n                    <FontAwesomeIcon icon={faTrashAlt} />\n                </div>\n            </div>\n        ))\n\n    )\n\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}