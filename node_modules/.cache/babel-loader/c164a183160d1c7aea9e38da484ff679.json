{"ast":null,"code":"import _regeneratorRuntime from\"/Users/norbert/Desktop/projekty/todolistreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/norbert/Desktop/projekty/todolistreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/norbert/Desktop/projekty/todolistreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{faSpinner}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";function Weather(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),weather=_useState2[0],setWeather=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),image=_useState4[0],setImage=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];useEffect(function(){getWeather();},[]);var getWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!navigator.geolocation){_context.next=3;break;}_context.next=3;return navigator.geolocation.getCurrentPosition(function(position){var lat=position.coords.latitude;var lon=position.coords.longitude;fetchWeather(lat,lon);},function(positionError){fetchWeather(52.23,21.01);});case 3:case\"end\":return _context.stop();}}},_callee);}));return function getWeather(){return _ref.apply(this,arguments);};}();var fetchWeather=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(lat,lon){var key,userLocation,apiWeather,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:key=\"157a086678c6a4bddb37252236346531\";userLocation=\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(key);_context2.prev=2;_context2.next=5;return fetch(userLocation);case 5:apiWeather=_context2.sent;_context2.next=8;return apiWeather.json();case 8:data=_context2.sent;setWeather(data);setLoading(false);setImage(\"http://openweathermap.org/img/wn/\".concat(data.weather[0].icon,\"@2x.png\"));_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](2);console.error(_context2.t0);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[2,14]]);}));return function fetchWeather(_x,_x2){return _ref2.apply(this,arguments);};}();if(loading){return/*#__PURE__*/React.createElement(\"div\",{id:\"weather\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSpinner,className:\"fa-spin\"}));};return/*#__PURE__*/React.createElement(\"div\",{id:\"weather\"},/*#__PURE__*/React.createElement(\"h1\",null,weather.name),/*#__PURE__*/React.createElement(\"img\",{src:image}),/*#__PURE__*/React.createElement(\"h1\",null,Math.floor(weather.main.temp-273.15),\" \\xB0C\"));}export default Weather;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/Weather.js"],"names":["React","useEffect","useState","faSpinner","FontAwesomeIcon","Weather","weather","setWeather","image","setImage","loading","setLoading","getWeather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","fetchWeather","positionError","key","userLocation","fetch","apiWeather","json","data","icon","console","error","name","Math","floor","main","temp"],"mappings":"yeAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,SAAT,KAA0B,mCAA1B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CAGA,QAASC,CAAAA,OAAT,EAAmB,eAEeH,QAAQ,CAAC,EAAD,CAFvB,wCAERI,OAFQ,eAECC,UAFD,8BAGWL,QAAQ,CAAC,EAAD,CAHnB,yCAGRM,KAHQ,eAGDC,QAHC,8BAIeP,QAAQ,CAAC,IAAD,CAJvB,yCAIRQ,OAJQ,eAICC,UAJD,eAMfV,SAAS,CAAC,UAAM,CACZW,UAAU,GACb,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,UAAU,0FAAG,uIACXC,SAAS,CAACC,WADC,+CAELD,CAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACF,SAAUC,QAAV,CAAoB,CAChB,GAAMC,CAAAA,GAAG,CAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA5B,CACA,GAAMC,CAAAA,GAAG,CAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA5B,CACAC,YAAY,CAACL,GAAD,CAAMG,GAAN,CAAZ,CACH,CALC,CAKC,SAAUG,aAAV,CAAyB,CACxBD,YAAY,CAAC,KAAD,CAAQ,KAAR,CAAZ,CACH,CAPC,CAFK,uDAAH,kBAAVV,CAAAA,UAAU,0CAAhB,CAcA,GAAMU,CAAAA,YAAY,2FAAG,kBAAOL,GAAP,CAAYG,GAAZ,2JACXI,GADW,oCAEXC,YAFW,+DAE2DR,GAF3D,iBAEsEG,GAFtE,mBAEmFI,GAFnF,0CAIYE,CAAAA,KAAK,CAACD,YAAD,CAJjB,QAIPE,UAJO,uCAKMA,CAAAA,UAAU,CAACC,IAAX,EALN,QAKPC,IALO,gBAMbtB,UAAU,CAACsB,IAAD,CAAV,CACAlB,UAAU,CAAC,KAAD,CAAV,CACAF,QAAQ,4CAAqCoB,IAAI,CAACvB,OAAL,CAAa,CAAb,EAAgBwB,IAArD,YAAR,CARa,qFAUbC,OAAO,CAACC,KAAR,eAVa,uEAAH,kBAAZV,CAAAA,YAAY,iDAAlB,CAaA,GAAIZ,OAAJ,CAAa,CACT,mBACI,2BAAK,EAAE,CAAC,SAAR,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAEP,SAAvB,CAAkC,SAAS,CAAC,SAA5C,EADJ,CADJ,CAKH,EAID,mBACI,2BAAK,EAAE,CAAC,SAAR,eACI,8BAAKG,OAAO,CAAC2B,IAAb,CADJ,cAEI,2BAAK,GAAG,CAAEzB,KAAV,EAFJ,cAGI,8BAAK0B,IAAI,CAACC,KAAL,CAAW7B,OAAO,CAAC8B,IAAR,CAAaC,IAAb,CAAoB,MAA/B,CAAL,UAHJ,CADJ,CAOH,CAED,cAAehC,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nfunction Weather() {\n\n    const [weather, setWeather] = useState([]);\n    const [image, setImage] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getWeather();\n    }, []);\n\n    const getWeather = async () => {\n        if (navigator.geolocation) {\n            await navigator.geolocation.getCurrentPosition(\n                function (position) {\n                    const lat = position.coords.latitude;\n                    const lon = position.coords.longitude;\n                    fetchWeather(lat, lon);\n                }, function (positionError) {\n                    fetchWeather(52.23, 21.01)\n                }\n            )\n        }\n    }\n\n    const fetchWeather = async (lat, lon) => {\n        const key = `157a086678c6a4bddb37252236346531`;\n        const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n        try {\n            const apiWeather = await fetch(userLocation);\n            const data = await apiWeather.json();\n            setWeather(data);\n            setLoading(false);\n            setImage(`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`);\n        } catch (err) {\n            console.error(err)\n        }\n    }\n    if (loading) {\n        return (\n            <div id=\"weather\">\n                <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\n            </div>\n        );\n    };\n\n\n\n    return (\n        <div id=\"weather\">\n            <h1>{weather.name}</h1>\n            <img src={image} />\n            <h1>{Math.floor(weather.main.temp - 273.15)} Â°C</h1>\n        </div >\n    );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}