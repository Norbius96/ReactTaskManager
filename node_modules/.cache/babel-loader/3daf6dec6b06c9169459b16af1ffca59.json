{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/Weather.js\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [temperature, setTemperature] = useState([]);\n  const [weatherDescription, setWeatherDescription] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  const getWeather = () => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      const key = `157a086678c6a4bddb37252236346531`;\n      const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n      fetch(userLocation).then(response => response.json()).then(data => {\n        setWeather(data);\n        setTemperature(data.main);\n        setWeatherDescription(data.weather);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, weather.name), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, weatherDescription.main), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, Math.floor(temperature.temp - 273.15), \" \\xB0C\"));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/Weather.js"],"names":["React","useEffect","useState","Weather","weather","setWeather","temperature","setTemperature","weatherDescription","setWeatherDescription","loading","setLoading","getWeather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","key","userLocation","fetch","then","response","json","data","main","name","Math","floor","temp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,OAAT,GAAmB;AAEf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACrBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACI,UAAUC,QAAV,EAAoB;AAChB,YAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA5B;AACA,YAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA5B;AACA,YAAMC,GAAG,GAAI,kCAAb;AACA,YAAMC,YAAY,GAAI,uDAAsDN,GAAI,QAAOG,GAAI,UAASE,GAAI,EAAxG;AAEAE,MAAAA,KAAK,CAACD,YAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVvB,QAAAA,UAAU,CAACuB,IAAD,CAAV;AACArB,QAAAA,cAAc,CAACqB,IAAI,CAACC,IAAN,CAAd;AACApB,QAAAA,qBAAqB,CAACmB,IAAI,CAACxB,OAAN,CAArB;AACH,OANL;AAOH,KAdL;AAiBH,GAlBD;;AAmBA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAAC0B,IAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,kBAAkB,CAACqB,IAAxB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,IAAI,CAACC,KAAL,CAAW1B,WAAW,CAAC2B,IAAZ,GAAmB,MAA9B,CAAL,WAHJ,CADJ;AAOH;;AAED,eAAe9B,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Weather() {\n\n    const [weather, setWeather] = useState([]);\n    const [temperature, setTemperature] = useState([]);\n    const [weatherDescription, setWeatherDescription] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getWeather();\n    }, []);\n\n    const getWeather = () => {\n        navigator.geolocation.getCurrentPosition(\n            function (position) {\n                const lat = position.coords.latitude;\n                const lon = position.coords.longitude;\n                const key = `157a086678c6a4bddb37252236346531`;\n                const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n\n                fetch(userLocation)\n                    .then(response => response.json())\n                    .then(data => {\n                        setWeather(data);\n                        setTemperature(data.main);\n                        setWeatherDescription(data.weather);\n                    });\n            }\n        )\n\n    }\n    return (\n        <div id=\"weather\">\n            <h1>{weather.name}</h1>\n            <h1>{weatherDescription.main}</h1>\n            <h1>{Math.floor(temperature.temp - 273.15)} Â°C</h1>\n        </div>\n    );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}