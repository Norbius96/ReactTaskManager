{"ast":null,"code":"import _slicedToArray from\"/Users/norbert/Desktop/projekty/todolistreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import'../styles/darkModeSwitch.css';import{useState,useEffect}from'react';function DarkModeSwitch(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),dark=_useState2[0],setDark=_useState2[1];useEffect(function(){var darkMode=JSON.parse(localStorage.getItem('dark'));if(darkMode===null){localStorage.setItem('dark',false);}else{setDark(darkMode);}setTheme(darkMode);},[]);var setTheme=function setTheme(theme){if(theme===true){document.documentElement.setAttribute('data-theme','dark');document.documentElement.classList.add('theme-transition');document.documentElement.setAttribute('data-theme','dark');window.setTimeout(function(){document.documentElement.classList.remove('theme-transition');},800);}else{document.documentElement.setAttribute('data-theme','light');document.documentElement.classList.add('theme-transition');document.documentElement.setAttribute('data-theme','light');window.setTimeout(function(){document.documentElement.classList.remove('theme-transition');},800);}};var changeTheme=function changeTheme(){localStorage.setItem('dark',!dark);setTheme(!dark);setDark(!dark);};return/*#__PURE__*/React.createElement(\"div\",{className:\"toggle-container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",id:\"switch\",name:\"theme\",onChange:changeTheme,checked:dark}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"switch\"},\"Toggle\"));}export default DarkModeSwitch;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/DarkModeSwitch.js"],"names":["React","useState","useEffect","DarkModeSwitch","dark","setDark","darkMode","JSON","parse","localStorage","getItem","setItem","setTheme","theme","document","documentElement","setAttribute","classList","add","window","setTimeout","remove","changeTheme"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,8BAAP,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,QAASC,CAAAA,cAAT,EAA0B,eAEEF,QAAQ,CAAC,EAAD,CAFV,wCAEfG,IAFe,eAETC,OAFS,eAItBH,SAAS,CAAC,UAAM,CACZ,GAAMI,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB,CACA,GAAIJ,QAAQ,GAAK,IAAjB,CAAuB,CACnBG,YAAY,CAACE,OAAb,CAAqB,MAArB,CAA6B,KAA7B,EACH,CAFD,IAEO,CACHN,OAAO,CAACC,QAAD,CAAP,CACH,CACDM,QAAQ,CAACN,QAAD,CAAR,CACH,CARQ,CAQN,EARM,CAAT,CAWA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACxB,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAEhBC,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,CAAoD,MAApD,EACAF,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCC,GAAnC,CAAuC,kBAAvC,EACAJ,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,CAAoD,MAApD,EACAG,MAAM,CAACC,UAAP,CAAkB,UAAY,CAC1BN,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCI,MAAnC,CAA0C,kBAA1C,EACH,CAFD,CAEG,GAFH,EAIH,CATD,IASO,CAEHP,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,CAAoD,OAApD,EACAF,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCC,GAAnC,CAAuC,kBAAvC,EACAJ,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,CAAoD,OAApD,EACAG,MAAM,CAACC,UAAP,CAAkB,UAAY,CAC1BN,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCI,MAAnC,CAA0C,kBAA1C,EACH,CAFD,CAEG,GAFH,EAIH,CAEJ,CArBD,CAuBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBb,YAAY,CAACE,OAAb,CAAqB,MAArB,CAA6B,CAACP,IAA9B,EACAQ,QAAQ,CAAC,CAACR,IAAF,CAAR,CACAC,OAAO,CAAC,CAACD,IAAF,CAAP,CACH,CAJD,CAMA,mBACI,2BAAK,SAAS,CAAC,kBAAf,eACI,6BACI,IAAI,CAAC,UADT,CAEI,EAAE,CAAC,QAFP,CAGI,IAAI,CAAC,OAHT,CAII,QAAQ,CAAEkB,WAJd,CAKI,OAAO,CAAElB,IALb,EADJ,cAQI,6BAAO,OAAO,CAAC,QAAf,WARJ,CADJ,CAaH,CAED,cAAeD,CAAAA,cAAf","sourcesContent":["import React from 'react';\n\nimport '../styles/darkModeSwitch.css';\nimport { useState, useEffect } from 'react';\n\nfunction DarkModeSwitch() {\n\n    const [dark, setDark] = useState('');\n\n    useEffect(() => {\n        const darkMode = JSON.parse(localStorage.getItem('dark'));\n        if (darkMode === null) {\n            localStorage.setItem('dark', false);\n        } else {\n            setDark(darkMode);\n        }\n        setTheme(darkMode);\n    }, [])\n\n\n    const setTheme = (theme) => {\n        if (theme === true) {\n\n            document.documentElement.setAttribute('data-theme', 'dark');\n            document.documentElement.classList.add('theme-transition')\n            document.documentElement.setAttribute('data-theme', 'dark')\n            window.setTimeout(function () {\n                document.documentElement.classList.remove('theme-transition');\n            }, 800);\n\n        } else {\n\n            document.documentElement.setAttribute('data-theme', 'light');\n            document.documentElement.classList.add('theme-transition')\n            document.documentElement.setAttribute('data-theme', 'light')\n            window.setTimeout(function () {\n                document.documentElement.classList.remove('theme-transition');\n            }, 800);\n\n        }\n\n    }\n\n    const changeTheme = () => {\n        localStorage.setItem('dark', !dark);\n        setTheme(!dark);\n        setDark(!dark);\n    }\n\n    return (\n        <div className=\"toggle-container\">\n            <input\n                type=\"checkbox\"\n                id=\"switch\"\n                name=\"theme\"\n                onChange={changeTheme}\n                checked={dark}\n            />\n            <label htmlFor=\"switch\">Toggle</label>\n        </div>\n    )\n\n}\n\nexport default DarkModeSwitch;\n"]},"metadata":{},"sourceType":"module"}