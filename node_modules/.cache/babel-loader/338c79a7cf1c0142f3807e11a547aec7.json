{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskList.js\";\nimport React, { useState, useContext } from 'react';\nimport { TaskContext } from './TaskContext';\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Popup from './Popup';\nimport '../styles/taskList.css';\nimport '../styles/popup.css';\n\nfunction TaskList() {\n  const [dataTask, setDataTask] = useContext(TaskContext);\n\n  const changeStatus = index => {\n    const copyTask = [...dataTask];\n\n    if (copyTask[index].status === 'success') {\n      copyTask[index].status = 'primary';\n      Popup('To do ✨');\n    } else {\n      copyTask[index].status = 'success';\n      Popup('It\\'s done 🔥');\n    }\n\n    setDataTask(copyTask);\n    localStorage.setItem('data', JSON.stringify(copyTask));\n  };\n\n  const deleteTask = index => {\n    const copyTask = [...dataTask];\n    copyTask.splice(index, 1);\n    setDataTask(copyTask);\n    localStorage.setItem('data', JSON.stringify(copyTask));\n    Popup('Deleted ❌');\n  };\n\n  return dataTask.map((task, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task \" + task.status,\n    key: index,\n    id: \"task-\" + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    onClick: () => changeStatus(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, task.task), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    onClick: () => deleteTask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })))).reverse();\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskList.js"],"names":["React","useState","useContext","TaskContext","faTrashAlt","FontAwesomeIcon","Popup","TaskList","dataTask","setDataTask","changeStatus","index","copyTask","status","localStorage","setItem","JSON","stringify","deleteTask","splice","map","task","reverse"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,wBAAP;AACA,OAAO,qBAAP;;AAEA,SAASC,QAAT,GAAoB;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,UAAU,CAACC,WAAD,CAA1C;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,QAAQ,GAAG,CAAC,GAAGJ,QAAJ,CAAjB;;AACA,QAAII,QAAQ,CAACD,KAAD,CAAR,CAAgBE,MAAhB,KAA2B,SAA/B,EAA0C;AACtCD,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBE,MAAhB,GAAyB,SAAzB;AACAP,MAAAA,KAAK,CAAC,SAAD,CAAL;AACH,KAHD,MAGO;AACHM,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBE,MAAhB,GAAyB,SAAzB;AACAP,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH;;AACDG,IAAAA,WAAW,CAACG,QAAD,CAAX;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAA7B;AACH,GAXD;;AAaA,QAAMM,UAAU,GAAIP,KAAD,IAAW;AAC1B,UAAMC,QAAQ,GAAG,CAAC,GAAGJ,QAAJ,CAAjB;AACAI,IAAAA,QAAQ,CAACO,MAAT,CAAgBR,KAAhB,EAAuB,CAAvB;AACAF,IAAAA,WAAW,CAACG,QAAD,CAAX;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAA7B;AACAN,IAAAA,KAAK,CAAC,WAAD,CAAL;AACH,GAND;;AASA,SAEIE,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAOV,KAAP,kBACT;AACI,IAAA,SAAS,EAAE,UAAUU,IAAI,CAACR,MAD9B;AAEI,IAAA,GAAG,EAAEF,KAFT;AAGI,IAAA,EAAE,EAAE,UAAUA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAI,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCU,IAAI,CAACA,IAA9C,CAJJ,eAKI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAE,MAAMH,UAAU,CAACP,KAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEP,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ,EAUGkB,OAVH,EAFJ;AAgBH;;AAED,eAAef,QAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TaskContext } from './TaskContext';\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Popup from './Popup';\n\nimport '../styles/taskList.css';\nimport '../styles/popup.css';\n\nfunction TaskList() {\n    const [dataTask, setDataTask] = useContext(TaskContext);\n\n    const changeStatus = (index) => {\n        const copyTask = [...dataTask];\n        if (copyTask[index].status === 'success') {\n            copyTask[index].status = 'primary';\n            Popup('To do ✨');\n        } else {\n            copyTask[index].status = 'success';\n            Popup('It\\'s done 🔥');\n        }\n        setDataTask(copyTask);\n        localStorage.setItem('data', JSON.stringify(copyTask));\n    }\n\n    const deleteTask = (index) => {\n        const copyTask = [...dataTask];\n        copyTask.splice(index, 1);\n        setDataTask(copyTask);\n        localStorage.setItem('data', JSON.stringify(copyTask));\n        Popup('Deleted ❌');\n    }\n\n\n    return (\n\n        dataTask.map((task, index) => (\n            <div\n                className={\"task \" + task.status}\n                key={index}\n                id={\"task-\" + index}>\n                <h1 onClick={() => changeStatus(index)}>{task.task}</h1>\n                <div className=\"icons\" onClick={() => deleteTask(index)}>\n                    <FontAwesomeIcon icon={faTrashAlt} />\n                </div>\n            </div>\n        )).reverse()\n\n    )\n\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}