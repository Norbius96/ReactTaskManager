{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskContext.js\";\nimport React, { useState, createContext } from 'react';\nexport const TaskContext = createContext();\nexport const TaskProvider = props => {\n  const [dataTask, setDataTask] = useState(JSON.parse(localStorage.getItem('data')));\n  useEffect(() => {\n    tasks();\n  }, []);\n\n  const tasks = () => {\n    let dataValue = JSON.parse(localStorage.getItem('data'));\n\n    if (dataValue === null) {\n      dataValue = [{\n        task: \"Have Fun with my TaskManager ✨\",\n        status: \"success\"\n      }];\n      localStorage.setItem('data', JSON.stringify(dataValue));\n    }\n\n    setDataTask(dataValue);\n  };\n\n  return /*#__PURE__*/React.createElement(TaskContext.Provider, {\n    value: [dataTask, setDataTask],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskContext.js"],"names":["React","useState","createContext","TaskContext","TaskProvider","props","dataTask","setDataTask","JSON","parse","localStorage","getItem","useEffect","tasks","dataValue","task","status","setItem","stringify","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,WAAW,GAAGD,aAAa,EAAjC;AAEP,OAAO,MAAME,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK;AACR,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,KAAK,GAAG,MAAM;AAChB,QAAIC,SAAS,GAAGN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhB;;AACA,QAAIG,SAAS,KAAK,IAAlB,EAAwB;AACpBA,MAAAA,SAAS,GAAG,CAAC;AACTC,QAAAA,IAAI,EAAE,gCADG;AAETC,QAAAA,MAAM,EAAE;AAFC,OAAD,CAAZ;AAIAN,MAAAA,YAAY,CAACO,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeJ,SAAf,CAA7B;AACH;;AACDP,IAAAA,WAAW,CAACO,SAAD,CAAX;AACH,GAVD;;AAYA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACR,QAAD,EAAWC,WAAX,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACc,QADX,CADJ;AAKH,CAzBM","sourcesContent":["import React, { useState, createContext } from 'react';\n\nexport const TaskContext = createContext();\n\nexport const TaskProvider = (props) => {\n    const [dataTask, setDataTask] = useState(JSON.parse(localStorage.getItem('data')));\n\n    useEffect(() => {\n        tasks();\n    }, [])\n\n\n    const tasks = () => {\n        let dataValue = JSON.parse(localStorage.getItem('data'));\n        if (dataValue === null) {\n            dataValue = [{\n                task: \"Have Fun with my TaskManager ✨\",\n                status: \"success\"\n            }];\n            localStorage.setItem('data', JSON.stringify(dataValue));\n        }\n        setDataTask(dataValue);\n    }\n\n    return (\n        <TaskContext.Provider value={[dataTask, setDataTask]} >\n            {props.children}\n        </TaskContext.Provider >\n    );\n}\n"]},"metadata":{},"sourceType":"module"}