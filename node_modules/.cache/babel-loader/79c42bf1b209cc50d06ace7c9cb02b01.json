{"ast":null,"code":"import _toConsumableArray from\"/Users/norbert/Desktop/projekty/todolistreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/norbert/Desktop/projekty/todolistreact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useContext}from'react';import{TaskContext}from'./TaskContext';import Popup from'./Popup';import'../styles/taskList.css';import'../styles/popup.css';import TaskItem from'./TaskItem';function TaskList(){var _useContext=useContext(TaskContext),_useContext2=_slicedToArray(_useContext,2),dataTask=_useContext2[0],setDataTask=_useContext2[1];useEffect(function(){tasks();},[]);var tasks=function tasks(){var dataValue=JSON.parse(localStorage.getItem('data'));if(dataValue===null){dataValue=[{task:\"Have Fun with my TaskManager ✨\",status:\"success\"}];localStorage.setItem('data',JSON.stringify(dataValue));}setDataTask(dataValue);};var _changeStatus=function changeStatus(index){var copyTask=_toConsumableArray(dataTask);if(copyTask[index].status==='success'){copyTask[index].status='primary';Popup('To do ✨');}else{copyTask[index].status='success';Popup('It\\'s done 🔥');}setDataTask(copyTask);localStorage.setItem('data',JSON.stringify(copyTask));};var _deleteTask=function deleteTask(index){var copyTask=_toConsumableArray(dataTask);console.log(index);setTimeout(function(){copyTask.splice(index,1);setDataTask(copyTask);localStorage.setItem('data',JSON.stringify(copyTask));},300);Popup('Deleted ❌');};return dataTask.map(function(task,index){return/*#__PURE__*/React.createElement(TaskItem,{key:task.id,task:task.task,status:task.status,index:index,changeStatus:function changeStatus(){return _changeStatus(index);},deleteTask:function deleteTask(){return _deleteTask(index);},data:task.date});}).reverse();}export default TaskList;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/TaskList.js"],"names":["React","useEffect","useContext","TaskContext","Popup","TaskItem","TaskList","dataTask","setDataTask","tasks","dataValue","JSON","parse","localStorage","getItem","task","status","setItem","stringify","changeStatus","index","copyTask","deleteTask","console","log","setTimeout","splice","map","id","date","reverse"],"mappings":"gVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,UAA3B,KAA6C,OAA7C,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,MAAO,wBAAP,CACA,MAAO,qBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,QAASC,CAAAA,QAAT,EAAoB,iBACgBJ,UAAU,CAACC,WAAD,CAD1B,4CACTI,QADS,iBACCC,WADD,iBAGhBP,SAAS,CAAC,UAAM,CACZQ,KAAK,GACR,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAIC,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhB,CACA,GAAIJ,SAAS,GAAK,IAAlB,CAAwB,CACpBA,SAAS,CAAG,CAAC,CACTK,IAAI,CAAE,gCADG,CAETC,MAAM,CAAE,SAFC,CAAD,CAAZ,CAIAH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAA6BN,IAAI,CAACO,SAAL,CAAeR,SAAf,CAA7B,EACH,CACDF,WAAW,CAACE,SAAD,CAAX,CACH,CAVD,CAYA,GAAMS,CAAAA,aAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,QAAQ,oBAAOd,QAAP,CAAd,CACA,GAAIc,QAAQ,CAACD,KAAD,CAAR,CAAgBJ,MAAhB,GAA2B,SAA/B,CAA0C,CACtCK,QAAQ,CAACD,KAAD,CAAR,CAAgBJ,MAAhB,CAAyB,SAAzB,CACAZ,KAAK,CAAC,SAAD,CAAL,CACH,CAHD,IAGO,CACHiB,QAAQ,CAACD,KAAD,CAAR,CAAgBJ,MAAhB,CAAyB,SAAzB,CACAZ,KAAK,CAAC,eAAD,CAAL,CACH,CACDI,WAAW,CAACa,QAAD,CAAX,CACAR,YAAY,CAACI,OAAb,CAAqB,MAArB,CAA6BN,IAAI,CAACO,SAAL,CAAeG,QAAf,CAA7B,EACH,CAXD,CAaA,GAAMC,CAAAA,WAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,KAAD,CAAW,CAC1B,GAAMC,CAAAA,QAAQ,oBAAOd,QAAP,CAAd,CACAgB,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EACAK,UAAU,CAAC,UAAM,CACbJ,QAAQ,CAACK,MAAT,CAAgBN,KAAhB,CAAuB,CAAvB,EACAZ,WAAW,CAACa,QAAD,CAAX,CACAR,YAAY,CAACI,OAAb,CAAqB,MAArB,CAA6BN,IAAI,CAACO,SAAL,CAAeG,QAAf,CAA7B,EACH,CAJS,CAIP,GAJO,CAAV,CAMAjB,KAAK,CAAC,WAAD,CAAL,CAEH,CAXD,CAaA,MAEIG,CAAAA,QAAQ,CAACoB,GAAT,CAAa,SAACZ,IAAD,CAAOK,KAAP,qBACT,oBAAC,QAAD,EACI,GAAG,CAAEL,IAAI,CAACa,EADd,CAEI,IAAI,CAAEb,IAAI,CAACA,IAFf,CAGI,MAAM,CAAEA,IAAI,CAACC,MAHjB,CAII,KAAK,CAAEI,KAJX,CAKI,YAAY,CAAE,8BAAMD,CAAAA,aAAY,CAACC,KAAD,CAAlB,EALlB,CAMI,UAAU,CAAE,4BAAME,CAAAA,WAAU,CAACF,KAAD,CAAhB,EANhB,CAOI,IAAI,CAAEL,IAAI,CAACc,IAPf,EADS,EAAb,EAUGC,OAVH,EAFJ,CAgBH,CAED,cAAexB,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { TaskContext } from './TaskContext';\nimport Popup from './Popup';\n\nimport '../styles/taskList.css';\nimport '../styles/popup.css';\nimport TaskItem from './TaskItem';\n\nfunction TaskList() {\n    const [dataTask, setDataTask] = useContext(TaskContext);\n\n    useEffect(() => {\n        tasks();\n    }, []);\n\n    const tasks = () => {\n        let dataValue = JSON.parse(localStorage.getItem('data'));\n        if (dataValue === null) {\n            dataValue = [{\n                task: \"Have Fun with my TaskManager ✨\",\n                status: \"success\"\n            }];\n            localStorage.setItem('data', JSON.stringify(dataValue));\n        }\n        setDataTask(dataValue);\n    }\n\n    const changeStatus = (index) => {\n        const copyTask = [...dataTask];\n        if (copyTask[index].status === 'success') {\n            copyTask[index].status = 'primary';\n            Popup('To do ✨');\n        } else {\n            copyTask[index].status = 'success';\n            Popup('It\\'s done 🔥');\n        }\n        setDataTask(copyTask);\n        localStorage.setItem('data', JSON.stringify(copyTask));\n    }\n\n    const deleteTask = (index) => {\n        const copyTask = [...dataTask];\n        console.log(index);\n        setTimeout(() => {\n            copyTask.splice(index, 1);\n            setDataTask(copyTask);\n            localStorage.setItem('data', JSON.stringify(copyTask));\n        }, 300);\n\n        Popup('Deleted ❌');\n\n    }\n\n    return (\n\n        dataTask.map((task, index) => (\n            <TaskItem\n                key={task.id}\n                task={task.task}\n                status={task.status}\n                index={index}\n                changeStatus={() => changeStatus(index)}\n                deleteTask={() => deleteTask(index)}\n                data={task.date}\n            />\n        )).reverse()\n\n    )\n\n}\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}