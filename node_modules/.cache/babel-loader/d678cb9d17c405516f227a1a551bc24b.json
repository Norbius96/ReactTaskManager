{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/Weather.js\";\nimport React, { useEffect, useState } from 'react';\nimport { render } from '@testing-library/react';\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  const getWeather = async () => {\n    await navigator.geolocation.getCurrentPosition(function (position) {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      fetchWeather(lat, lon);\n    });\n  };\n\n  const fetchWeather = async (lat, lon) => {\n    const key = `157a086678c6a4bddb37252236346531`;\n    const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n\n    try {\n      const apiWeather = await fetch(userLocation);\n      const data = await apiWeather.json();\n      setWeather(data);\n      setLoading(false);\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Loading...\"));\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"weather\",\n    style: {\n      backgroundImage: `url(\"/assets/weather/${weather.weather[0].icon}.jpg\")`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, weather.name), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, Math.floor(weather.main.temp - 273.15), \" \\xB0C\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, weather.weather[0].icon, \".jpg\"));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/Weather.js"],"names":["React","useEffect","useState","render","Weather","weather","setWeather","loading","setLoading","getWeather","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","fetchWeather","key","userLocation","apiWeather","fetch","data","json","console","log","err","error","backgroundImage","icon","name","Math","floor","main","temp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,SAASC,OAAT,GAAmB;AAEf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAY;AAC3B,UAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACF,UAAUC,QAAV,EAAoB;AAChB,YAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA5B;AACA,YAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA5B;AACAC,MAAAA,YAAY,CAACL,GAAD,EAAMG,GAAN,CAAZ;AACH,KALC,CAAN;AAOH,GARD;;AAUA,QAAME,YAAY,GAAG,OAAOL,GAAP,EAAYG,GAAZ,KAAoB;AACrC,UAAMG,GAAG,GAAI,kCAAb;AACA,UAAMC,YAAY,GAAI,uDAAsDP,GAAI,QAAOG,GAAI,UAASG,GAAI,EAAxG;;AACA,QAAI;AACA,YAAME,UAAU,GAAG,MAAMC,KAAK,CAACF,YAAD,CAA9B;AACA,YAAMG,IAAI,GAAG,MAAMF,UAAU,CAACG,IAAX,EAAnB;AACAnB,MAAAA,UAAU,CAACkB,IAAD,CAAV;AACAhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEH,KAPD,CAOE,OAAOI,GAAP,EAAY;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACH;AACJ,GAbD;;AAcA,MAAIrB,OAAJ,EAAa;AACT,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH;;AAAA;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,KAAK,EAAE;AAAEuB,MAAAA,eAAe,EAAG,wBAAuBzB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmB0B,IAAK;AAAnE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK1B,OAAO,CAAC2B,IAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACC,KAAL,CAAW7B,OAAO,CAAC8B,IAAR,CAAaC,IAAb,GAAoB,MAA/B,CAAL,WAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK/B,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmB0B,IAAxB,SAHJ,CADJ;AAOH;;AAED,eAAe3B,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { render } from '@testing-library/react';\n\nfunction Weather() {\n\n    const [weather, setWeather] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getWeather();\n    }, []);\n\n    const getWeather = async () => {\n        await navigator.geolocation.getCurrentPosition(\n            function (position) {\n                const lat = position.coords.latitude;\n                const lon = position.coords.longitude;\n                fetchWeather(lat, lon);\n            }\n        )\n    }\n\n    const fetchWeather = async (lat, lon) => {\n        const key = `157a086678c6a4bddb37252236346531`;\n        const userLocation = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${key}`;\n        try {\n            const apiWeather = await fetch(userLocation);\n            const data = await apiWeather.json();\n            setWeather(data);\n            setLoading(false);\n            console.log(data);\n\n        } catch (err) {\n            console.error(err)\n        }\n    }\n    if (loading) {\n        return (\n            <div id=\"weather\">\n                <h1>Loading...</h1>\n            </div>\n        );\n    };\n\n    return (\n        <div id=\"weather\" style={{ backgroundImage: `url(\"/assets/weather/${weather.weather[0].icon}.jpg\")` }}>\n            <h1>{weather.name}</h1>\n            <h1>{Math.floor(weather.main.temp - 273.15)} Â°C</h1>\n            <h1>{weather.weather[0].icon}.jpg</h1>\n        </div >\n    );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}