{"ast":null,"code":"var _jsxFileName = \"/Users/norbert/Desktop/projekty/todolistreact/src/components/DarkModeSwitch.js\";\nimport React from 'react';\nimport '../styles/darkModeSwitch.css';\nimport { useState, useEffect } from 'react';\n\nfunction DarkModeSwitch() {\n  const [dark, setDark] = useState(false);\n  const [checked, setCheked] = useState(false);\n  useEffect(() => {\n    const darkMode = JSON.parse(localStorage.getItem('dark'));\n    setDark(darkMode);\n    setTheme(darkMode);\n    console.log(dark);\n  }, []);\n\n  const setTheme = dark => {\n    // setDark(!dark);\n    // localStorage.setItem('dark', dark);\n    if (dark === true) {\n      setCheked(true);\n      document.documentElement.setAttribute('data-theme', 'dark');\n      document.documentElement.classList.add('theme-transition');\n      document.documentElement.setAttribute('data-theme', 'dark');\n      window.setTimeout(function () {\n        document.documentElement.classList.remove('theme-transition');\n      }, 800);\n    } else {\n      setCheked(false);\n      document.documentElement.setAttribute('data-theme', 'light');\n      document.documentElement.classList.add('theme-transition');\n      document.documentElement.setAttribute('data-theme', 'light');\n      window.setTimeout(function () {\n        document.documentElement.classList.remove('theme-transition');\n      }, 800);\n    }\n  };\n\n  const changeTheme = () => {\n    setDark(!false);\n    localStorage.setItem('dark', dark);\n    setTheme(dark);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"switch\",\n    name: \"theme\",\n    onChange: changeTheme,\n    checked: checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Toggle\"));\n}\n\nexport default DarkModeSwitch;","map":{"version":3,"sources":["/Users/norbert/Desktop/projekty/todolistreact/src/components/DarkModeSwitch.js"],"names":["React","useState","useEffect","DarkModeSwitch","dark","setDark","checked","setCheked","darkMode","JSON","parse","localStorage","getItem","setTheme","console","log","document","documentElement","setAttribute","classList","add","window","setTimeout","remove","changeTheme","setItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,8BAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,cAAT,GAA0B;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,SAAV,IAAuBN,QAAQ,CAAC,KAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAjB;AACAP,IAAAA,OAAO,CAACG,QAAD,CAAP;AACAK,IAAAA,QAAQ,CAACL,QAAD,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AAEH,GANQ,EAMN,EANM,CAAT;;AASA,QAAMS,QAAQ,GAAIT,IAAD,IAAU;AACvB;AACA;AACA,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACfG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAS,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACAF,MAAAA,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCC,GAAnC,CAAuC,kBAAvC;AACAJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACAG,MAAAA,MAAM,CAACC,UAAP,CAAkB,YAAY;AAC1BN,QAAAA,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCI,MAAnC,CAA0C,kBAA1C;AACH,OAFD,EAEG,GAFH;AAGH,KARD,MAQO;AACHhB,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAS,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACAF,MAAAA,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCC,GAAnC,CAAuC,kBAAvC;AACAJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACAG,MAAAA,MAAM,CAACC,UAAP,CAAkB,YAAY;AAC1BN,QAAAA,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCI,MAAnC,CAA0C,kBAA1C;AACH,OAFD,EAEG,GAFH;AAGH;AAEJ,GArBD;;AAuBA,QAAMC,WAAW,GAAG,MAAM;AACtBnB,IAAAA,OAAO,CAAC,CAAC,KAAF,CAAP;AACAM,IAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BrB,IAA7B;AACAS,IAAAA,QAAQ,CAACT,IAAD,CAAR;AACH,GAJD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAEoB,WAJd;AAKI,IAAA,OAAO,EAAElB,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADJ;AAaH;;AAED,eAAeH,cAAf","sourcesContent":["import React from 'react';\n\nimport '../styles/darkModeSwitch.css';\nimport { useState, useEffect } from 'react';\n\nfunction DarkModeSwitch() {\n\n    const [dark, setDark] = useState(false);\n    const [checked, setCheked] = useState(false);\n\n    useEffect(() => {\n        const darkMode = JSON.parse(localStorage.getItem('dark'));\n        setDark(darkMode);\n        setTheme(darkMode);\n        console.log(dark);\n\n    }, [])\n\n\n    const setTheme = (dark) => {\n        // setDark(!dark);\n        // localStorage.setItem('dark', dark);\n        if (dark === true) {\n            setCheked(true);\n            document.documentElement.setAttribute('data-theme', 'dark');\n            document.documentElement.classList.add('theme-transition')\n            document.documentElement.setAttribute('data-theme', 'dark')\n            window.setTimeout(function () {\n                document.documentElement.classList.remove('theme-transition');\n            }, 800)\n        } else {\n            setCheked(false);\n            document.documentElement.setAttribute('data-theme', 'light');\n            document.documentElement.classList.add('theme-transition')\n            document.documentElement.setAttribute('data-theme', 'light')\n            window.setTimeout(function () {\n                document.documentElement.classList.remove('theme-transition');\n            }, 800)\n        }\n\n    }\n\n    const changeTheme = () => {\n        setDark(!false);\n        localStorage.setItem('dark', dark);\n        setTheme(dark);\n    }\n\n\n\n    return (\n        <div className=\"toggle-container\">\n            <input\n                type=\"checkbox\"\n                id=\"switch\"\n                name=\"theme\"\n                onChange={changeTheme}\n                checked={checked}\n            />\n            <label htmlFor=\"switch\">Toggle</label>\n        </div>\n    )\n\n}\n\nexport default DarkModeSwitch;\n"]},"metadata":{},"sourceType":"module"}